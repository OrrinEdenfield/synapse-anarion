{
	"name": "df_IoTAggByHour",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\ttimestamp as timestamp,\n\t\tdeviceid as string,\n\t\ttemperature as double,\n\t\thumidity as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 derive(ISO8601 = toString(year(toDate(timestamp))) + '-' + iif(toInteger(month(toDate(timestamp))) < 10, '0' + toString(month(toDate(timestamp))), toString(month(toDate(timestamp))))\r\n + '-' + iif(toInteger(dayOfMonth(toDate(timestamp))) < 10, '0' + toString(dayOfMonth(toDate(timestamp))), toString(dayOfMonth(toDate(timestamp)))) + '-' + iif(toInteger(toString(hour(timestamp))) < 10, '0' + toString(hour(timestamp)), toString(hour(timestamp)))) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(ISO8601,\n\t\tdeviceid),\n\tavg_temperature = avg(temperature),\n\t\tavg_humidity = avg(humidity)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(toString(subDays(currentDate(),1))+'.parquet')],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1),\n\tformat: 'parquet',\n\tpreCommands: [],\n\tpostCommands: []) ~> sink1"
		}
	}
}