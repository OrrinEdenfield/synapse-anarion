{
	"name": "dx-in-a-day-L01",
	"properties": {
		"content": {
			"query": "LogisticsTelemetryHistorical | count \n// 1,375,849\n\n\nLogisticsTelemetryHistorical\n| where messageSource == \"telemetry\"\n| count \n// 1,375,849\n\n\n// Challenge 3, Task 1\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| take 10\n\nLogisticsTelemetryHistorical\n| where enqueuedTime > ago(200000m) // You might get 0 records if data is old. Use above query to check enqueuedTime in data\n| take 10 \n\nLogisticsTelemetryHistorical\n| summarize count() // or: count\n// 1,375,849\n\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| summarize count()\n// 53377\n\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| summarize count() by deviceId\n\n\n\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| summarize count() by deviceId\n| render piechart \n\n\nLogisticsTelemetryHistorical\n// | where enqueuedTime > ago(10d) \n| extend h = telemetry.Humidity\n| summarize avg(toint(h)) by bin(enqueuedTime, 1h)\n| render timechart \n\n\n// Challenge 3, Task 2\nLogisticsTelemetryHistorical | getschema\n\nLogisticsTelemetryHistorical\n| extend d=parse_json(telemetry) \n| take 10\n\n// Challenge 3, Task 3\n//deviceId, enqueuedTime, Temp. Take arbitrary 10 records\nLogisticsTelemetryHistorical\n| project deviceId, enqueuedTime, Temp\n| take 10\n\n\n// Challenge 3, Task 4\nLogisticsTelemetryHistorical\n| project deviceId, enqueuedTime, Temp\n| where enqueuedTime > ago(180d)\n| take 10\n\n// Challenge 3, Task 5\nLogisticsTelemetryHistorical\n| project deviceId, enqueuedTime, Temp\n| sort by Temp asc\n| take 5\n\n\n// Challenge 3, 6\nLogisticsTelemetryHistorical\n| extend F_Temp = Temp\n| extend C_Temp = (Temp - 32)* (5.0/9.0) \n| project F_Temp, C_Temp, deviceId, messageSource, enqueuedTime, messageProperties\n| take 5\n\n\n// Challenge 3, 7\nLogisticsTelemetryHistorical\n| count\n\n// Challenge 3, 8\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| count\n\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| summarize count() by deviceId\n\n\n// Challenge 3, 9\nLogisticsTelemetryHistorical\n| where deviceId startswith \"x\"\n| summarize count() by deviceId\n| render piechart \n\n\n// Challenge 3, Task 10\nLogisticsTelemetryHistorical\n| project deviceId, enqueuedTime\n| summarize count() by bin(enqueuedTime, 10m)\n| render timechart \n\n\n\n// Challenge 3, Task 11\nLogisticsTelemetryHistorical\n| extend temp = telemetry.Temp\n| summarize avg(toint(temp)) by bin(enqueuedTime, 30m)\n| render timechart \n\n\n// Challenge 4, Task 1\n//.drop function C04T01\n.create function with (docstring = 'Challenge 4, Task 1 function', folder='ADXInADay') C04T01() {LogisticsTelemetryHistorical | extend NumofTagsCalculated = (toint(telemetry.TotalTags) - toint(telemetry.LostTags)) | project deviceId, enqueuedTime, NumofTagsCalculated, Temp}\n\n// Challenge 4, Task 2\n.create table LogisticsTelemetryManipulated  (deviceId:string, enqueuedTime:datetime, NumOfTagsCalculated:long, Temp:real)\n\n// Test out the function\nC04T01\n| take 5\n\n\n.alter table LogisticsTelemetryManipulated policy update \n@'[{\"IsEnabled\": true,\"Source\": \"LogisticsTelemetryHistorical\",\"Query\": \"C04T01()\",\"IsTransactional\": true,\"PropagateIngestionProperties\": false}]'\n\nLogisticsTelemetryManipulated\n| take 5\n// Nothing shows up since new records are not inserted yet.\n\n// Insert some new records\n.set-or-append LogisticsTelemetryHistorical <| LogisticsTelemetryHistorical | take 1000\n\nLogisticsTelemetryManipulated\n| take 10\n// Now I see records\n\n\n// Challenge 4, Task 3\n//.drop materialized-view matView1\n\n.create materialized-view matView1 on table LogisticsTelemetryHistorical {LogisticsTelemetryHistorical | summarize arg_max(deviceId, enqueuedTime) by deviceId}\n//.create materialized-view matView1 on table LogisticsTelemetryManipulated {LogisticsTelemetryManipulated | summarize arg_max(deviceId, enqueuedTime) by deviceId}\n\n// Sometimes SQL works - but not in Synapse Analytics Studio\nselect deviceId, max(enqueuedTime) as maxenqueuedTime \nfrom LogisticsTelemetryManipulated \ngroup by deviceId\n\n\n// Challenge 4, Task 4\nmatView1\nmaterialized_view(\"matView1\")\n// I'm not sure this is working as expected, no records shown.\n",
			"metadata": {
				"language": "kql"
			},
			"currentConnection": {
				"poolName": "oredsdxpool01",
				"databaseName": "db01"
			}
		},
		"type": "KqlQuery"
	}
}